
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.ImageIcon;

import javax.swing.JOptionPane;

public class Visualizar extends javax.swing.JFrame implements VeiculoObserver {

    //Utilização de composição
    private HashMap<String, Veiculo> veiculos;
    private TelaInicial telaInicial;
    private PagamentoStrategy pagamentoStrategy;

    public Visualizar(HashMap<String, Veiculo> veiculos, TelaInicial tela, PagamentoStrategy strategy) {
        initComponents();
        setTitle("EasyParking Software");
        ImageIcon icon = new ImageIcon(getClass().getResource("/resources/trabalho.png"));
        setIconImage(icon.getImage());
        this.veiculos = veiculos;
        this.telaInicial = tela;
        this.pagamentoStrategy = strategy;
    }

    public void metodoVisualizar(String nome, String tipo, String placa, String hora) {
        labelNome.setText(nome);
        labelTipo.setText(tipo);
        labelPlaca.setText(placa);
        labelHora.setText(hora);
        labelTempo.setText(tempoUtilizado(hora));

    }

    public static double calculoValor(String horasUtilizadas, String minutosUtilizados) {
        int horas = Integer.parseInt(horasUtilizadas);
        int minutos = Integer.parseInt(minutosUtilizados);

        // Converter o tempo total em minutos
        int tempoTotalMin = horas * 60 + minutos;

        double valor = tempoTotalMin * 0.066;

        return valor;
    }

    public void setPagamentoStrategy(PagamentoStrategy strategy) {
        this.pagamentoStrategy = strategy;
    }

    public String tempoUtilizado(String horas) {
        SimpleDateFormat formatador = new SimpleDateFormat("HH:mm");
        try {
            Date horaFornecida = formatador.parse(horas);
            Date horaAtual = new Date();
            long diferencaEmMillis = horaAtual.getTime() - horaFornecida.getTime();
            long horasUtilizadas = diferencaEmMillis / (60 * 60 * 1000);
            long minutosUtilizados = (diferencaEmMillis / (60 * 1000)) % 60;

            if (horasUtilizadas > 471000) {
                horasUtilizadas = 0;
            }
            if (horasUtilizadas == 0 && minutosUtilizados == 0) {
                labelPagar.setText("R$ 0.00");
            } else {
                double valor = pagamentoStrategy.calcularPagamento(
                        String.valueOf(horasUtilizadas), String.valueOf(minutosUtilizados)
                );
                labelPagar.setText("R$ " + String.format("%.2f", valor));
            }

            String tempoFormatado = String.format("%02d:%02d", horasUtilizadas, minutosUtilizados);
            labelTempo.setText(tempoFormatado);

            return tempoFormatado;
        } catch (ParseException e) {
            e.printStackTrace();
            labelPagar.setText("Formato de hora inválido");
            labelTempo.setText("Formato de hora inválido.");
            return "Formato de hora inválido.";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNome = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        labelTipo = new javax.swing.JLabel();
        labelPlaca = new javax.swing.JLabel();
        labelHora = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        labelTempo = new javax.swing.JLabel();
        btnFinalizar = new javax.swing.JButton();
        labelPagar = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(550, 550));
        setMinimumSize(new java.awt.Dimension(500, 530));
        setPreferredSize(new java.awt.Dimension(400, 400));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelNome.setForeground(new java.awt.Color(242, 242, 242));
        labelNome.setText("jLabel1");
        getContentPane().add(labelNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 110, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(242, 242, 242));
        jLabel1.setText("Nome:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 210, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 665, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(242, 242, 242));
        jLabel3.setText("Tipo:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 90, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(242, 242, 242));
        jLabel4.setText("Placa:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 100, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(242, 242, 242));
        jLabel5.setText("Hora:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 90, -1));

        labelTipo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelTipo.setForeground(new java.awt.Color(242, 242, 242));
        labelTipo.setText("jLabel1");
        getContentPane().add(labelTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 110, -1));

        labelPlaca.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelPlaca.setForeground(new java.awt.Color(242, 242, 242));
        labelPlaca.setText("jLabel1");
        getContentPane().add(labelPlaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 240, 110, -1));

        labelHora.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelHora.setForeground(new java.awt.Color(242, 242, 242));
        labelHora.setText("jLabel1");
        getContentPane().add(labelHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, 110, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(242, 242, 242));
        jLabel6.setText("Tempo:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, 110, -1));

        labelTempo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelTempo.setForeground(new java.awt.Color(242, 242, 242));
        labelTempo.setText("jLabel7");
        getContentPane().add(labelTempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 110, -1));

        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnFinalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 90, 30));

        labelPagar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelPagar.setForeground(new java.awt.Color(242, 242, 242));
        labelPagar.setText("jLabel7");
        getContentPane().add(labelPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(242, 242, 242));
        jLabel8.setText("Total a pagar: ");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fundoeasy.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed

        //String nomeCondutor = labelNome.getText(); // Obtém o nome do condutor a partir do label
        String nomeCondutor = labelNome.getText();
        if (!nomeCondutor.isEmpty()) {
            if (veiculos.containsKey(nomeCondutor)) {

                Veiculo veiculo = veiculos.get(nomeCondutor);

                String tempoUtilizadoStr = tempoUtilizado(veiculo.getHoraEntrada());
                String[] tempoParts = tempoUtilizadoStr.split(":");

                if (tempoParts.length == 2) {
                    int horasUtilizadas = Integer.parseInt(tempoParts[0]);
                    int minutosUtilizados = Integer.parseInt(tempoParts[1]);

                    double valor = pagamentoStrategy.calcularPagamento(
                            String.valueOf(horasUtilizadas), String.valueOf(minutosUtilizados)
                    );

                    veiculos.remove(nomeCondutor);

                    JOptionPane.showMessageDialog(this, "Pagamento efetuado. Valor a pagar: R$ " + String.format("%.2f", valor));

                    if (telaInicial != null) {
                        telaInicial.incrementLabel();
                    }

                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Tempo inválido.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Condutor não encontrado no registro.");
            }
        }


    }//GEN-LAST:event_btnFinalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel labelHora;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelPagar;
    private javax.swing.JLabel labelPlaca;
    private javax.swing.JLabel labelTempo;
    private javax.swing.JLabel labelTipo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void veiculoAtualizado(String nome, String tipo, String placa, String hora) {
        // Atualize a exibição com os novos dados do carro
        labelNome.setText(nome);
        labelTipo.setText(tipo);
        labelPlaca.setText(placa);
        labelHora.setText(hora);
        labelTempo.setText(tempoUtilizado(hora));
    }
}
